<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epsilon.lx.mapper.BaseUserMapper" >
  <resultMap id="BaseResultMap" type="com.epsilon.lx.entities.BaseUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_non_expired" property="accountNonExpired" jdbcType="BIT" />
    <result column="account_non_locked" property="accountNonLocked" jdbcType="BIT" />
    <result column="credentials_non_expired" property="credentialsNonExpired" jdbcType="BIT" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, account_non_expired, account_non_locked, credentials_non_expired, 
    enabled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epsilon.lx.entities.BaseUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from base_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from base_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epsilon.lx.entities.BaseUserExample" >
    delete from base_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epsilon.lx.entities.BaseUser" >
    insert into base_user (id, username, password, 
      account_non_expired, account_non_locked, credentials_non_expired, 
      enabled)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{accountNonExpired,jdbcType=BIT}, #{accountNonLocked,jdbcType=BIT}, #{credentialsNonExpired,jdbcType=BIT}, 
      #{enabled,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.epsilon.lx.entities.BaseUser" >
    insert into base_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountNonExpired != null" >
        account_non_expired,
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked,
      </if>
      <if test="credentialsNonExpired != null" >
        credentials_non_expired,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null" >
        #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null" >
        #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null" >
        #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epsilon.lx.entities.BaseUserExample" resultType="java.lang.Integer" >
    select count(*) from base_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNonExpired != null" >
        account_non_expired = #{record.accountNonExpired,jdbcType=BIT},
      </if>
      <if test="record.accountNonLocked != null" >
        account_non_locked = #{record.accountNonLocked,jdbcType=BIT},
      </if>
      <if test="record.credentialsNonExpired != null" >
        credentials_non_expired = #{record.credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account_non_expired = #{record.accountNonExpired,jdbcType=BIT},
      account_non_locked = #{record.accountNonLocked,jdbcType=BIT},
      credentials_non_expired = #{record.credentialsNonExpired,jdbcType=BIT},
      enabled = #{record.enabled,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epsilon.lx.entities.BaseUser" >
    update base_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNonExpired != null" >
        account_non_expired = #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null" >
        account_non_locked = #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null" >
        credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epsilon.lx.entities.BaseUser" >
    update base_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_non_expired = #{accountNonExpired,jdbcType=BIT},
      account_non_locked = #{accountNonLocked,jdbcType=BIT},
      credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>